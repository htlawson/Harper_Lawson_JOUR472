filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
rowwise()
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
View(senate_results)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
rowwise()
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > c_across(chris_chaffee_republican) &
chris_van_hollen_democratic > c_across(scottie_griffin_write_in_democratic) &
chris_van_hollen_democratic > c_across(andrew_j_wildman_write_in_unaffiliated) &
chris_van_hollen_democratic > c_across(other_write_ins))
View(senate_results)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number, ~as.numeric(str_replace_all(., ",", "")))) %>%
rowwise()
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number, ~as.numeric(str_replace_all(., ",", ""))))
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number, ~as.numeric(str_replace_all(., ",", ""))))
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
View(senate_results)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
View(senate_results)
gov_race_results_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
gov_race_results <- gov_race_results_url %>%
read_html() %>%
html_table()
gov_race_results <- gov_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number)) %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
slice(-7) %>%
arrange(desc(pct_election_day)) %>%
select(name, pct_election_day)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
library(tidyverse)
library(tidycensus)
library(rvest)
library(janitor)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2", install=TRUE, overwrite=TRUE)
library(tidycensus)
library(dplyr)
# Set your Census API key (replace 'YOUR_API_KEY' with your actual API key)
census_api_key("CENSUS_API_KEY")
# Retrieve median household income data for Maryland counties
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
library(tidycensus)
library(dplyr)
# Set your Census API key (replace 'YOUR_API_KEY' with your actual API key)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
# Retrieve median household income data for Maryland counties
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(B19013_001)) %>%
slice(1) %>%
select(NAME) %>%
pull()
View(md_counties_income)
library(tidycensus)
library(dplyr)
# Set your Census API key (replace 'YOUR_API_KEY' with your actual API key)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
# Retrieve median household income data for Maryland counties
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
select(NAME) %>%
pull()
# Extract the name of the wealthiest county
wealthiest_county_name <- wealthiest_county[[1]]
# Filter the election results for the wealthiest county
wealthiest_county_results <- senate_results %>%
filter(County == wealthiest_county_name)
library(tidycensus)
library(dplyr)
# Set your Census API key (replace 'YOUR_API_KEY' with your actual API key)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
# Retrieve median household income data for Maryland counties
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
select(NAME) %>%
pull()
# Extract the name of the wealthiest county
wealthiest_county_name <- wealthiest_county[[1]]
# Filter the election results for the wealthiest county
wealthiest_county_results <- senate_results %>%
filter(NAME == wealthiest_county_name)
library(tidycensus)
library(dplyr)
# Set your Census API key (replace 'YOUR_API_KEY' with your actual API key)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
# Retrieve median household income data for Maryland counties
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
select(NAME) %>%
pull()
# Extract the name of the wealthiest county
wealthiest_county_name <- wealthiest_county[[1]]
# Filter the election results for the wealthiest county
wealthiest_county_results <- senate_results %>%
filter(NAME == wealthiest_county_name)
library(tidycensus)
library(dplyr)
# Set your Census API key (replace 'YOUR_API_KEY' with your actual API key)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
# Retrieve median household income data for Maryland counties
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
select(NAME) %>%
pull()
# Extract the name of the wealthiest county
wealthiest_county_results <- wealthiest_county[[1]] %>%
filter(NAME == wealthiest_county_name)
View(wealthiest_county_name)
View(wealthiest_county)
library(tidycensus)
library(dplyr)
# Set your Census API key (replace 'YOUR_API_KEY' with your actual API key)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
# Retrieve median household income data for Maryland counties
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
read_html() %>%
html_table() %>%
arrange(desc(estimate)) %>%
slice(1) %>%
select(NAME) %>%
pull()
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) # Extract the wealthiest county name
# Filter the election results for the wealthiest county
wealthiest_county_results <- senate_results %>%
filter(County == wealthiest_county)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) # Extract the wealthiest county name
# Filter the election results for the wealthiest county
wealthiest_county_results <- senate_results %>%
filter(NAME == wealthiest_county)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) # Extract the wealthiest county name
# Calculate the percentage of votes Chris Van Hollen received in the wealthiest county
percentage_vote <- mean(wealthiest_county_results$chris_van_hollen_democratic / sum(wealthiest_county_results[, -1])) * 100
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
# Identify the wealthiest county based on median income
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) # Extract the wealthiest county name
# Calculate the percentage of votes Chris Van Hollen received in the wealthiest county
percentage_vote <- mean(wealthiest_county$chris_van_hollen_democratic / sum(wealthiest_county[, -1])) * 100
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) %>%
print()
View(senate_race_results)
View(senate_results)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) %>%
print()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
View(senate_results)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) %>%
print()
wealthiest_county_results <- senate_results %>%
filter(NAME == 'Howard County, Maryland')
View(wealthiest_county_name)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) %>%
print()
wealthiest_county_results <- wealthiest_county %>%
filter(NAME == 'Howard County, Maryland')
View(senate_results)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) %>%
print()
wealthiest_county_results <- senate_results %>%
filter(jurisdiction == Howard)
View(senate_results)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) %>%
print()
wealthiest_county_results <- senate_results %>%
filter(jurisdiction == "Howard")
percentage_vote <- mean(wealthiest_county_results$chris_van_hollen_democratic / sum(wealthiest_county_results[, -1])) * 100
percentage_vote
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME) %>%
print()
wealthiest_county_results <- senate_results %>%
filter(jurisdiction == "Howard")
percentage_vote <- mean(wealthiest_county_results$chris_van_hollen_democratic / sum(wealthiest_county_results[, -1])) * 100 %>%
print()
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME)
wealthiest_county
wealthiest_county_results <- senate_results %>%
filter(jurisdiction == "Howard")
percentage_vote <- mean(wealthiest_county_results$chris_van_hollen_democratic / sum(wealthiest_county_results[, -1])) * 100
percentage_vote
library(tidyverse)
library(tidycensus)
library(rvest)
library(janitor)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2", install=TRUE, overwrite=TRUE)
gov_race_results_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
gov_race_results <- gov_race_results_url %>%
read_html() %>%
html_table()
gov_race_results <- gov_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number)) %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
slice(-7) %>%
arrange(desc(pct_election_day)) %>%
select(name, pct_election_day)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME)
wealthiest_county
wealthiest_county_results <- senate_results %>%
filter(jurisdiction == "Howard")
percentage_vote <- mean(wealthiest_county_results$chris_van_hollen_democratic / sum(wealthiest_county_results[, -1])) * 100
percentage_vote
library(tidyverse)
library(tidycensus)
library(rvest)
library(janitor)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2", install=TRUE, overwrite=TRUE)
gov_race_results_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
gov_race_results <- gov_race_results_url %>%
read_html() %>%
html_table()
gov_race_results <- gov_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number)) %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
slice(-7) %>%
arrange(desc(pct_election_day)) %>%
select(name, pct_election_day)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
senate_results
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins)
nrow(senate_results)
census_api_key("9788f1a2c2f48db2b495aa1230cfb9bfb24d44b2")
md_counties_income <- get_acs(geography = "county", variables = "B19013_001", state = "MD", geometry = TRUE)
wealthiest_county <- md_counties_income %>%
arrange(desc(estimate)) %>%
slice(1) %>%
pull(NAME)
wealthiest_county
wealthiest_county_results <- senate_results %>%
filter(jurisdiction == "Howard")
percentage_vote <- mean(wealthiest_county_results$chris_van_hollen_democratic / sum(wealthiest_county_results[, -1])) * 100
percentage_vote
gov_race_results_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
gov_race_results <- gov_race_results_url %>%
read_html() %>%
html_table()
gov_race_results <- gov_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number)) %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
slice(-7) %>%
arrange(desc(pct_election_day)) %>%
select(name, pct_election_day)
gov_race_results
View(senate_results)
senate_race_results_url <- "https://www.elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
senate_race_results <- senate_race_results_url %>%
read_html() %>%
html_table()
senate_results <- senate_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3), parse_number)) %>%
mutate(across(-1, ~parse_number(str_replace_all(., ",", ""))))
senate_results <- senate_results %>%
filter(chris_van_hollen_democratic > chris_chaffee_republican &
chris_van_hollen_democratic > scottie_griffin_write_in_democratic &
chris_van_hollen_democratic > andrew_j_wildman_write_in_unaffiliated &
chris_van_hollen_democratic > other_write_ins) %>%
slice(-11)
nrow(senate_results)
